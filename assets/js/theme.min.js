var certy={vars:{rtl:!1,themeColor:"#d14b4a"}},aceOptions={rtl:!1,color:"#c0e3e7",progress:{animation:!0,textColor:"inherit",trailColor:"rgba(0,0,0,0.07)"},nav:{height:"auto",arrow:!1},slider:{obj:"",speed:"",dots:!0}},ace={html:"",body:"",mobile:"",themeColor:"",header:{head:"",col1:"",col2:"",col3:""},sidebar:{obj:"",btn:""},nav:{obj:"",tooltip:$('<div class="ace-tooltip"></div>')},overlay:{obj:$('<div id="ace-overlay"></div>')},progress:{lines:"",charts:"",bullets:""}};certy.initGlobalVars=function(){this.vars.html=$("html"),this.vars.body=$("body"),this.vars.windowW=$(window).width(),this.vars.windowH=$(window).height(),/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(this.vars.mobile=!0,this.vars.html.addClass("mobile")):(this.vars.mobile=!1,this.vars.html.addClass("desktop"))},certy.lockScroll=function(){var e=certy.vars.html.outerWidth(),t=certy.vars.body.outerHeight(),o=[self.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft,self.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop];certy.vars.html.data("scroll-position",o),certy.vars.html.data("previous-overflow",certy.vars.html.css("overflow")),certy.vars.html.css("overflow","hidden"),window.scrollTo(o[0],o[1]);var a=certy.vars.body.outerWidth()-e,r=certy.vars.body.outerHeight()-t;certy.vars.body.css({"margin-right":a,"margin-bottom":r}),certy.vars.html.addClass("lock-scroll")},certy.unlockScroll=function(){certy.vars.html.css("overflow",certy.vars.html.data("previous-overflow"));var e=certy.vars.html.data("scroll-position");window.scrollTo(e[0],e[1]),certy.vars.body.css({"margin-right":0,"margin-bottom":0}),certy.vars.html.removeClass("lock-scroll")},certy.slider=function(e){for(var t=0;t<e.length;t++)"none"!=$(e[t]).data("init")&&$(e[t]).slick()},certy.carousel=function(e){for(var t=0;t<e.length;t++)"none"!==$(e[t]).data("init")&&$(e[t]).slick({dots:!0})},certy.portfolio={},certy.portfolio.initGrid=function(e){var t=e.isotope({isOriginLeft:!certy.vars.rtl,itemSelector:".pf-grid-item",percentPosition:!0,masonry:{columnWidth:".pf-grid-sizer"}});t.imagesLoaded().progress(function(){t.isotope("layout")});var o=e.closest(".pf-wrap").find(".pf-filter");if(o.length>0){var a=o.find("button"),r=$(".pf-filter button:first-child");r.addClass("active"),a.on("click",function(){a.removeClass("active"),$(this).addClass("active");var e=$(this).attr("data-filter");t.isotope({filter:e})})}},certy.portfolio.openPopup=function(e){certy.vars.html.addClass("cr-portfolio-opened"),this.popup_wrapper=$('<div id="pf-popup-wrap"><div class="pf-popup-inner"><div class="pf-popup-middle"><div class="pf-popup-container"><button id="pf-popup-close"><i class="rsicon rsicon-close"></i></button><div id="pf-popup-content" class="pf-popup-content"></div></div></div></div></div>'),certy.vars.body.append(this.popup_wrapper),this.popup_content=$("#pf-popup-content"),this.popup_content.append(e.clone()),$("#pf-popup-content .pf-popup-media").slick({dots:!0,arrows:!1}),$("#pf-popup-content .pf-rel-list").slick({dots:!1,infinite:!0,slidesToShow:3,slidesToScroll:3}),this.popup_wrapper.addClass("pf-opened"),certy.lockScroll()},certy.portfolio.closePopup=function(e){certy.vars.html.removeClass("cr-portfolio-opened"),this.popup_wrapper.removeClass("pf-opened"),setTimeout(function(){certy.portfolio.popup_wrapper.remove(),certy.unlockScroll()},500)},function(e){"use strict";function t(){/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)?(ace.mobile=!0,ace.html.addClass("ace-mobile")):(ace.mobile=!1,ace.html.addClass("ace-desktop"))}function o(e,t,o,a){var r=t.find("#ace-logo").width()+15,i=a.find("#ace-sidebar-btn").width()+15;e.hasClass("ace-head-boxed")&&e.hasClass("ace-logo-out")||e.hasClass("ace-head-full")&&o.hasClass("text-center")?r>=i&&(t.width(r),a.width(r)):(t.width(r),a.width(i))}function a(){ace.body.append(ace.overlay.obj),ace.overlay.obj[0].style.opacity=0,window.getComputedStyle(ace.overlay.obj[0]).opacity,ace.overlay.obj[0].style.opacity=1}function r(){ace.overlay.obj[0].style.opacity=0,ace.overlay.obj.remove()}function i(){var e=ace.html.outerWidth(),t=ace.body.outerHeight(),o=[self.pageXOffset||document.documentElement.scrollLeft||document.body.scrollLeft,self.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop];ace.html.data("scroll-position",o),ace.html.data("previous-overflow",ace.html.css("overflow")),ace.html.css("overflow","hidden"),window.scrollTo(o[0],o[1]);var a=ace.body.outerWidth()-e,r=ace.body.outerHeight()-t;ace.body.css({"margin-right":a,"margin-bottom":r}),ace.html.addClass("ace-lock-scroll")}function s(){ace.html.css("overflow",ace.html.data("previous-overflow"));var e=ace.html.data("scroll-position");window.scrollTo(e[0],e[1]),ace.body.css({"margin-right":0,"margin-bottom":0}),ace.html.removeClass("ace-lock-scroll")}function l(){ace.html.addClass("ace-sidebar-opened"),a(),i()}function n(){ace.html.removeClass("ace-sidebar-opened"),r(),s()}function c(e,t,o,a){var r=new ProgressBar.Circle(e,{color:aceOptions.color,strokeWidth:5,trailWidth:0,text:{value:t,className:"progress-text",style:{top:"50%",left:"50%",color:aceOptions.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0},svgStyle:{display:"block",width:"100%"},duration:a,easing:"easeOut"});r.animate(o)}function p(e,t,o,a){var r=new ProgressBar.Line(e,{strokeWidth:4,easing:"easeInOut",duration:a,color:aceOptions.color,trailColor:aceOptions.progress.trailColor,trailWidth:4,svgStyle:{width:"100%",height:"100%"},text:{value:t,className:"progress-text",style:{top:"-25px",right:"0",color:aceOptions.progress.textColor,position:"absolute",margin:0,padding:0,transform:{prefix:!0,value:"translate(0, 0)"}},autoStyleContainer:!0}});r.animate(o)}function d(e,t){var o=e[0].getBoundingClientRect();return o.bottom>=0&&o.right>=0&&o.top+t<=(window.innerHeight||document.documentElement.clientHeight)&&o.left<=(window.innerWidth||document.documentElement.clientWidth)}function f(t,o){for(var a=0;a<t.length;a++){var r=e(t[a]);if(r.hasClass("ace-animate")&&d(r,o)){if(r.removeClass("ace-animate").addClass("ace-animated"),r.hasClass("progress-chart")){var i=r.find(".progress-bar");c(i[0],i.data("text"),i.data("value"),1e3)}if(r.hasClass("progress-line")){var s=r.find(".progress-bar");p(s[0],s.data("text"),s.data("value"),1e3)}}}}function u(t,o){f(t,o),e(window).scroll(function(){f(t,o)}),e(window).resize(function(){f(t,o)})}function h(){var t,o=44.5403,a=-78.5463,r=e("#map"),i=r.get(0),s=[{elementType:"labels.text",stylers:[{visibility:"off"}]},{featureType:"landscape.natural",elementType:"geometry.fill",stylers:[{color:"#f5f5f2"},{visibility:"on"}]},{featureType:"administrative",stylers:[{visibility:"off"}]},{featureType:"transit",stylers:[{visibility:"off"}]},{featureType:"poi.attraction",stylers:[{visibility:"off"}]},{featureType:"landscape.man_made",elementType:"geometry.fill",stylers:[{color:"#ffffff"},{visibility:"on"}]},{featureType:"poi.business",stylers:[{visibility:"off"}]},{featureType:"poi.medical",stylers:[{visibility:"off"}]},{featureType:"poi.place_of_worship",stylers:[{visibility:"off"}]},{featureType:"poi.school",stylers:[{visibility:"off"}]},{featureType:"poi.sports_complex",stylers:[{visibility:"off"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{color:"#ffffff"},{visibility:"simplified"}]},{featureType:"road.arterial",stylers:[{visibility:"simplified"},{color:"#ffffff"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{color:"#ffffff"},{visibility:"off"}]},{featureType:"road.highway",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road.arterial",stylers:[{color:"#ffffff"}]},{featureType:"road.local",stylers:[{color:"#ffffff"}]},{featureType:"poi.park",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"water",stylers:[{color:"#71c8d4"}]},{featureType:"landscape",stylers:[{color:"#e5e8e7"}]},{featureType:"poi.park",stylers:[{color:"#8ba129"}]},{featureType:"road",stylers:[{color:"#ffffff"}]},{featureType:"poi.sports_complex",elementType:"geometry",stylers:[{color:"#c7c7c7"},{visibility:"off"}]},{featureType:"water",stylers:[{color:"#a0d3d3"}]},{featureType:"poi.park",stylers:[{color:"#91b65d"}]},{featureType:"poi.park",stylers:[{gamma:1.51}]},{featureType:"road.local",stylers:[{visibility:"off"}]},{featureType:"road.local",elementType:"geometry",stylers:[{visibility:"on"}]},{featureType:"poi.government",elementType:"geometry",stylers:[{visibility:"off"}]},{featureType:"landscape",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.arterial",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"road.local",stylers:[{visibility:"simplified"}]},{featureType:"road"},{featureType:"road"},{},{featureType:"road.highway"}];r.data("latitude")&&(o=r.data("latitude")),r.data("longitude")&&(a=r.data("longitude")),t=new google.maps.LatLng(o,a);var l={zoom:14,center:t,scrollwheel:!0,mapTypeId:google.maps.MapTypeId.ROADMAP,styles:s};r=new google.maps.Map(i,l),google.maps.event.addDomListener(window,"resize",function(){r.setCenter(t)})}e(function(){certy.initGlobalVars();var a=e(".pf-grid");if(a.length>0&&(certy.portfolio.initGrid(a),e(document).on("click",".pf-project",function(){var t=e(this).attr("href");return certy.portfolio.openPopup(e(t)),!1}),e(document).on("touchstart click",".cr-portfolio-opened #pf-popup-wrap",function(t){var o=e("#pf-popup-content");o.is(t.target)||0!==o.has(t.target).length||certy.portfolio.closePopup()})),certy.slider(e(".cr-slider")),certy.carousel(e(".cr-carousel")),ace.html=e("html"),ace.body=e("body"),t(),ace.header.head=e("#ace-header"),ace.header.col1=e("#ace-head-col1"),ace.header.col2=e("#ace-head-col2"),ace.header.col3=e("#ace-head-col3"),o(ace.header.head,ace.header.col1,ace.header.col2,ace.header.col3),ace.html.hasClass("ace-tab-nav-on")>0){Modernizr.mq("(min-width: 992px)")&&"auto"!==aceOptions.nav.height&&(ace.nav.obj=e("#ace-nav-scroll"),ace.nav.obj.height(ace.nav.obj.height()).animate({height:aceOptions.nav.height},700,function(){ace.nav.obj.mCustomScrollbar({axis:"y",scrollbarPosition:"outside"}),aceOptions.nav.arrow&&(e("#ace-nav-tools").removeClass("hidden"),e("#ace-nav-arrow").on("click",function(){e("#ace-nav-scroll").mCustomScrollbar("scrollTo","-=300")}))}));var r,d;e("#ace-nav a").hover(function(){var t=e(this);r=setTimeout(function(){d=e('<div class="ace-tooltip"></div>');var o=t.offset().top,a=t.offset().left,r=a+t.outerWidth(),i=(t.outerWidth(),0);ace.body.append(d),d.text(t.data("tooltip")),r+d.outerWidth()<e(window).width()?d.addClass("arrow-left").css({left:r+"px",top:o+i+"px"}):d.addClass("arrow-right").css({left:a-d.outerWidth()-10+"px",top:o+i+"px"}),d.fadeIn(300)},300)},function(){clearTimeout(r),"undefined"!=typeof d&&d.fadeOut(300,function(){d.remove()})})}if(e("#ace-main-nav-sm .has-sub-menu > a").on("click touchstart",function(){return!!e(this).hasClass("hover")||(e(this).addClass("hover"),e(this).next().slideDown(500),!1)}),ace.sidebar.obj=e("#ace-sidebar"),ace.sidebar.btn=e("#ace-sidebar-btn"),ace.sidebar.btn.on("touchstart click",function(){l()}),e(document).on("touchstart click",".ace-sidebar-opened #ace-overlay",function(e){var t=ace.sidebar.obj;t.is(e.target)||0!==t.has(e.target).length||n()}),e("#ace-sidebar-close").on("click",function(){n()}),e("#ace-sidebar-inner").mCustomScrollbar({axis:"y",theme:"minimal-dark",autoHideScrollbar:!0,scrollButtons:{enable:!0}}),!aceOptions.progress.animation||ace.mobile){ace.progress.charts=e(".progress-chart .progress-bar");for(var f=0;f<ace.progress.charts.length;f++){var v=e(ace.progress.charts[f]);c(v[0],v.data("text"),v.data("value"),1)}ace.progress.lines=e(".progress-line .progress-bar");for(var f=0;f<ace.progress.lines.length;f++){var y=e(ace.progress.lines[f]);p(y[0],y.data("text"),y.data("value"),1)}}aceOptions.progress.animation&&!ace.mobile&&u(e(".ace-animate"),150),e("pre").each(function(e,t){hljs.highlightBlock(t)}),e(".alert .close").on("click",function(){var t=e(this).parent();t.fadeOut(500,function(){t.remove()})}),e(".slider").slick({dots:!0}),e("#map").length>0&&h();var m=e(".tabs-menu>li.active");if(m.length>0)for(var f=0;f<m.length;f++){var g=e(m[f]).children().attr("href");e(g).addClass("active").show()}e(".tabs-menu a").on("click",function(t){var o=e(this),a=o.attr("href"),r=o.closest(".tabs"),i=r.find(".tab-content");o.parent().addClass("active"),o.parent().siblings().removeClass("active"),i.not(a).removeClass("active").hide(),e(a).addClass("active").fadeIn(500),t.preventDefault()});var b=e(".togglebox>li.active");b.length>0&&b.find(".togglebox-content").show(),e(".togglebox-header").on("click",function(){var t=e(this);t.next(".togglebox-content").slideToggle(300),t.parent().toggleClass("active")});var w=e(".accordion>li.active");w.length>0&&w.find(".accordion-content").show(),e(".accordion-header").on("click",function(){var t=e(this),o=t.parent(),a=t.next(),r=t.closest(".accordion").find(".accordion-content");o.hasClass("active")?(o.removeClass("active"),a.slideUp()):(o.siblings().removeClass("active"),o.addClass("active"),r.slideUp(300),a.slideDown(300))}),e(".comment-replys-link").on("click",function(){return e(this).closest(".comment").toggleClass("show-replies"),!1});var C={};C.wrapper=null,C.content=null,C.slider=null,C.open=function(t){this.wrapper=e('<div id="pf-popup-wrap" class="pf-popup-wrap"><div class="pf-popup-inner"><div class="pf-popup-middle"><div class="pf-popup-container"><button id="pf-popup-close"><i class="rsicon rsicon-close"></i></button><div id="pf-popup-content" class="pf-popup-content"></div></div></div></div>'),ace.body.append(this.wrapper),this.content=e("#pf-popup-content"),this.content.append(t.clone()),C.wrapper.addClass("opened"),i()},C.close=function(){this.wrapper.removeClass("opened"),setTimeout(function(){C.wrapper.remove(),s()},500)},e(document).on("click",".pf-btn-view",function(){var t=e(this).attr("href");return C.open(e(t)),ace.html.addClass("ace-portfolio-opened"),!1}),e(document).on("touchstart click",".ace-portfolio-opened #pf-popup-wrap",function(t){var o=e("#pf-popup-content");o.is(t.target)||0!==o.has(t.target).length||(C.close(),ace.html.removeClass("ace-portfolio-opened"))}),e(".toggle-link").on("click",function(){var t=e(this).attr("href");return e(this).hasClass("opened")?(e(t).slideUp(500),e(this).removeClass("opened")):(e(t).slideDown(500),e(this).addClass("opened")),!1}),e("#btn-share").on("mouseenter",function(){e(this).parent().addClass("hovered")}),e(".ace-share-box").on("mouseleave",function(){var t=e(this);t.hasClass("hovered")&&(t.addClass("closing"),setTimeout(function(){t.removeClass("hovered"),t.removeClass("closing")},300))})}),e(window).on("resize",function(){o(ace.header.head,ace.header.col1,ace.header.col2,ace.header.col3)}),e(window).on("load",function(){var t=e(".pf-grid");if(t.length>0){var o=t.isotope({isOriginLeft:!aceOptions.rtl,itemSelector:".pf-grid-item",percentPosition:!0,masonry:{columnWidth:".pf-grid-sizer"}}),a=e(".pf-filter");if(a.length>0){var r=a.find("button"),i=e(".pf-filter button:first-child");i.addClass("active"),r.on("click",function(){r.removeClass("active"),e(this).addClass("active");var t=e(this).attr("data-filter");o.isotope({filter:t})})}t.addClass("loaded")}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
